name: Build MT7620

on: 
  release:
    types: [published]
#  push:
#    tags:
#    - 'v*'
  #  branches: 
  #    - master
 # schedule:
 #   - cron: 0 17 * * 4
#  watch:
#    types: [started]

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt-get -y install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd fakeroot \
        cpio git python-docutils gettext automake autopoint texinfo build-essential help2man \
        pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget
    - - name: Clone source code
      env:
        KERNEL: 3.4
      run: |
        git clone --depth=1 https://github.com/chongshengB/rt-n56u.git /opt/rt-n56u
        fi
        cd /opt/rt-n56u/toolchain-mipsel
        sh dl_toolchain.sh
        mkdir -p /opt/images/
    - name: Build Firmware
      env:
        TNAME: "MI-MINI"
      run: |
        cwd=`pwd`
        CONFIG_TOOLCHAIN_DIR=${cwd//\//\\\/}\\/toolchain-mipsel
        cd trunk
        for m in $TNAME;
        do
        if [ ! -f configs/templates/$m.config ] ; then
        echo "configs/templates/$m.config not found "
        exit 1
        fi
        cp -f configs/templates/$m.config .config
        #####################################################################################
        echo "CONFIG_FIRMWARE_INCLUDE_CADDY=y" >> .config #在线文件管理服务
        echo "CONFIG_FIRMWARE_INCLUDE_WYY=y" >> .config #网易云解锁
        ####################################################################################
        #if [ "$m" = "PSG1208" ] || [ "$m" = "PSG1218" ] || [ "$m" = "PSG712" ]; then
        #sed -i '/CONFIG_FIRMWARE_INCLUDE_TTYD/d' .config
        #sed -i '/CONFIG_FIRMWARE_INCLUDE_ALIDDNS/d' .config
        #echo "CONFIG_FIRMWARE_INCLUDE_TTYD=n" >> .config
        #echo "CONFIG_FIRMWARE_INCLUDE_ALIDDNS=n" >> .config
        #echo "CONFIG_FIRMWARE_INCLUDE_SMARTDNSBIN=n" >> .config
        #echo "CONFIG_FIRMWARE_INCLUDE_KOOLPROXY=n" >> .config
        #fi
        sed -i "s/^CONFIG_TOOLCHAIN_DIR=.*$/CONFIG_TOOLCHAIN_DIR=${CONFIG_TOOLCHAIN_DIR}/g" .config
        sudo ./clear_tree_simple
        sudo ./build_firmware_modify $m 0
        sudo mv -f images/*.trx /opt/images/
        done
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.R_TOKEN }}
        file: /opt/images/*.trx
        tag: AtuoBuild
        overwrite: true
        file_glob: true
